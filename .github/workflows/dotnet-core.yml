name: Build, Pack, and Hand-off to Octopus

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:  
  OUTPUT_FOLDER: PackagesOutput
  PACKAGE_NAME: RandomQuotes
  OCTOPUS_PROJECT_NAME: RandomQuotes  
  OCTOPUS_SPACE_NAME: Default

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set environment variables      
      run: |        
        $versionFromFile = Get-Content versionprefix.txt 
        Write-Host "Found $versionFromFile in versionprefix.md"
        $versionNumber = "$versionfromFile.${env:GITHUB_RUN_NUMBER}"
        Write-Host "Setting environment version number to: $versionNumber"
        echo "::set-env name=PACKAGE_VERSION::$versionNumber"        
      shell: powershell
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Publish
      run: dotnet publish --output ${env:OUTPUT_FOLDER}
    - name: Install Octopus Tooling
      run: choco install octopustools -y
      shell: powershell
    - name: Pack
      run: octo pack ${env:OUTPUT_FOLDER} --id="${env:PACKAGE_NAME}" --version="${env:PACKAGE_VERSION}"
      shell: powershell
    - name: Handoff to Octopus Deploy
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}        
      run: octo push --package="${env:PACKAGE_NAME}.${env:PACKAGE_VERSION}.nupkg" --server="${env:OCTOPUS_URL}" --apiKey="${env:OCTOPUS_API_KEY}" --space="${env:OCTOPUS_SPACE_NAME}"  
      shell: powershell 
